CREATE database codelearn;
USE codelearn;


CREATE TABLE users (
    idx INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    password VARCHAR(100) NOT NULL,
    hash VARCHAR(64) NOT NULL,
    introduction TEXT,
    profile TEXT
);

CREATE TABLE board (
    idx INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    writer VARCHAR(50) NOT NULL,
    content TEXT NOT NULL,
    regdate DATETIME NOT NULL,
    filename VARCHAR(255)
);

CREATE TABLE review (
    idx INT(11) AUTO_INCREMENT PRIMARY KEY,
    content VARCHAR(255),
    username VARCHAR(255)
);

CREATE TABLE user_info (
    name VARCHAR(100),
    password VARCHAR(100),
    ssn VARCHAR(20),
    phone VARCHAR(20)
);

CREATE TABLE lecture (
    name VARCHAR(100),
    img VARCHAR(100),
    grade double(10,3)
);

INSERT INTO lecture(name, img, grade) values('[UNITY] 유니티로 입문하는 게임 프로그래밍', '../images/1.png', '4.68');
INSERT INTO lecture(name, img, grade) values('[악성코드] 인공지능을 이용한 악성코드 분석 및 탐지', '../images/2.png', '4.81');
INSERT INTO lecture(name, img, grade) values('[iOS] iOS 프로그래밍 - 이론과 실습', '../images/3.png', '4.26');
INSERT INTO lecture(name, img, grade) values('[정보보안] 사이버 시큐리티 - 웹해킹', '../images/4.png', '4.73');
INSERT INTO lecture(name, img, grade) values('HTML/CSS/JavaScript 한 번에 끝내기', '../images/5.png', '4.72');
INSERT INTO lecture(name, img, grade) values('[System] 초심자를 위한 시스템 해킹', '../images/6.png', '4.88');
INSERT INTO lecture(name, img, grade) values('[AI] 생성형 인공지능 & LLM 공격 및 분석', '../images/7.png', '4.93');
INSERT INTO lecture(name, img, grade) values('코틀린을 통해 개발하는 안드로이드', '../images/8.png', '4.62');
INSERT INTO lecture(name, img, grade) values('S/W 엔지니어를 위한 로드맵', '../images/9.png', '4.99');
INSERT INTO lecture(name, img, grade) values('클라우드 아키텍처의 A-Z', '../images/10.png', '4.55');
INSERT INTO lecture(name, img, grade) values('데이터분석가를 위한 로드맵', '../images/11.png', '4.19');
INSERT INTO lecture(name, img, grade) values('현대 운영체제의 이해', '../images/12.png', '4.28');

-- 테이블 생성
CREATE TABLE lecture_info (
    idx INT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    students INT NOT NULL,
    description TEXT,
    technologies TEXT,
    content TEXT,
    qna TEXT
);

-- 첫 번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '[UNITY] 유니티로 입문하는 게임 프로그래밍',
    168,
    '이 강의는 Unity를 활용하여 게임 개발의 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 레트로한 느낌의 배경과 함께 Unity를 이용한 게임 프로그래밍을 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 게임을 제작하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>Unity</li>
        <li>C#</li>
        <li>ASP.NET Web API</li>
        <li>MySQL</li>
    </ul>',
    'Unity 게임 프로그래밍 정복하기 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 게임 개발의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, Unity 인터페이스 및 기본 설정에 대해 학습합니다. 이 부분에서는 Unity 에디터의 구성 요소와 사용법을 소개하고, 새 프로젝트 생성 및 기본 설정 방법을 설명합니다.<br>
 
 두 번째로, C# 프로그래밍 기초를 배웁니다. C# 언어의 기본 문법을 이해하고, Unity에서 C#을 활용하는 방법을 배우게 됩니다. 변수, 조건문, 반복문, 함수 등 기초 개념을 다루며, 이를 실제로 Unity에서 어떻게 적용하는지 학습합니다.<br>
 
 세 번째로, 게임 오브젝트와 컴포넌트에 대해 학습합니다. 게임 오브젝트의 개념과 사용법, Transform, Rigidbody, Collider 등의 컴포넌트 사용법을 익히고, 오브젝트 간의 상호작용을 구현하는 방법을 배웁니다.<br>
 
 네 번째로, 2D 및 3D 게임 개발에 대해 다룹니다. 2D 게임과 3D 게임의 차이점을 이해하고, 간단한 2D 및 3D 게임을 제작하는 실습을 진행합니다. 카메라 설정과 조작에 대해서도 배우게 됩니다.<br>
 
 다섯 번째로, 애니메이션 및 UI 요소에 대해 학습합니다. Unity에서 애니메이션을 만드는 방법과 UI 요소(버튼, 텍스트, 슬라이더 등)를 추가하고 설정하는 방법을 익힙니다. 애니메이션 트리거와 상태 전이에 대해서도 학습합니다.<br>
 
 여섯 번째로, 고급 게임 개발 기법에 대해 학습합니다. 네비게이션 메쉬와 AI 경로 찾기, 물리 엔진을 활용한 복잡한 상호작용 구현, 네트워크 게임 개발 기초 등을 다룹니다.<br>
 
 마지막으로, 게임 배포에 대해 학습합니다. 다양한 플랫폼(PC, 모바일, 웹 등)으로 게임을 빌드하고 배포하는 방법을 배우며, 배포 시 주의사항과 최적화 기법에 대해서도 학습합니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, Unity를 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 Unity를 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 프로그래밍 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 게임을 만들 수 있는지에 대한 질문입니다. 강의 수료 후에는 2D 및 3D 게임의 기초를 이해하고, 간단한 게임을 직접 제작할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 게임 개발의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 Unity 게임 개발의 기초부터 고급 기술까지 체계적으로 배우고, 실제 게임을 제작하며 실력을 쌓아 보세요!'
);

-- 두 번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '[악성코드] 인공지능을 이용한 악성코드 분석 및 탐지',
    200,
    '이 강의는 인공지능과 정보보호를 활용하여 악성탐지 모델을 개발하는 방법을 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 기술과 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 악성탐지 모델을 제작하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>인공지능</li>
        <li>머신러닝</li>
        <li>데이터 분석</li>
        <li>정보보호</li>
    </ul>',
    '인공지능과 정보보호 모델 활용 악성탐지 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 악성탐지 모델 개발의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 인공지능 및 머신러닝의 기초와 기본 개념을 학습합니다. 이 부분에서는 인공지능의 원리와 머신러닝의 기본 알고리즘을 소개하고, 다양한 문제 해결 방법을 설명합니다.<br>
 
 두 번째로, 데이터 분석 기법을 배웁니다. 데이터 수집, 전처리, 분석 방법을 이해하고, 이를 활용하여 데이터에서 유의미한 패턴을 추출하는 방법을 학습합니다.<br>
 
 세 번째로, 악성탐지 모델 개발에 필요한 정보보호 기법을 학습합니다. 암호화, 접근 제어, 네트워크 보안 등의 정보보호 기법을 익히고, 이를 악성탐지에 적용하는 방법을 배웁니다.<br>
 
 네 번째로, 실제 악성탐지 모델을 개발하는 실습을 진행합니다. 다양한 데이터셋을 활용하여 악성탐지 모델을 설계하고, 개발하는 과정을 통해 실무 능력을 향상시킵니다.<br>
 
 다섯 번째로, 개발한 모델을 평가하고 최적화하는 방법을 학습합니다. 모델의 성능을 평가하고, 하이퍼파라미터 튜닝과 같은 최적화 기법을 통해 모델의 정확성을 향상시킵니다.<br>
 
 여섯 번째로, 최신 인공지능 및 정보보호 트렌드와 기술에 대해 학습합니다. 최신 연구 결과와 사례를 통해 최신 트렌드를 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>
 
 마지막으로, 개발한 모델을 실제 환경에 배포하는 방법을 학습합니다. 모델 배포 시 고려해야 할 사항과 최적화 기법에 대해 배우며, 실무에 적용할 수 있는 능력을 기릅니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 인공지능을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 인공지능을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 프로그래밍 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 모델을 개발할 수 있는지에 대한 질문입니다. 강의 수료 후에는 악성탐지 모델의 기초를 이해하고, 간단한 모델을 직접 제작할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 악성탐지 모델 개발의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 인공지능과 정보보호를 활용한 악성탐지 모델 개발의 기초부터 고급 기술까지 체계적으로 배우고, 실제 모델을 제작하며 실력을 쌓아 보세요!'
);

-- 세 번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '[iOS] iOS 프로그래밍 - 이론과 실습',
    198,
    '이 강의는 iOS 프로그래밍을 처음 접하는 분들을 위한 포괄적인 프로그램입니다. 최신 iOS 개발 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 iOS 애플리케이션을 제작하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>Swift</li>
        <li>Xcode</li>
        <li>UI 디자인</li>
        <li>API 통합</li>
    </ul>',
    'IOS 프로그래밍 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 iOS 애플리케이션 개발의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, iOS 개발 환경 설정과 기본 개념에 대해 학습합니다. 이 부분에서는 Xcode 설치 및 설정, iOS 프로젝트 생성 방법을 설명합니다.<br>
 
 두 번째로, Swift 프로그래밍 언어의 기초를 배웁니다. Swift 언어의 기본 문법을 이해하고, 변수, 조건문, 반복문, 함수 등 기초 개념을 다룹니다.<br>
 
 세 번째로, iOS UI 디자인과 레이아웃에 대해 학습합니다. UIKit을 활용하여 다양한 UI 요소를 추가하고, 오토레이아웃을 사용하여 반응형 디자인을 구현하는 방법을 배웁니다.<br>
 
 네 번째로, 데이터 저장과 관리에 대해 다룹니다. Core Data와 UserDefaults를 사용하여 데이터를 저장하고 관리하는 방법을 학습합니다.<br>
 
 다섯 번째로, 네트워킹과 API 통합에 대해 학습합니다. URLSession을 사용하여 RESTful API와 통신하고, JSON 데이터를 처리하는 방법을 익힙니다.<br>
 
 여섯 번째로, 앱의 성능 최적화와 디버깅 기법을 학습합니다. Instruments를 사용하여 성능을 분석하고, Xcode의 디버깅 도구를 활용하여 버그를 찾고 수정하는 방법을 배웁니다.<br>
 
 마지막으로, 앱 스토어에 배포하는 과정을 학습합니다. 앱 스토어에 앱을 제출하는 방법과 심사 절차, 배포 시 주의사항에 대해 배웁니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, iOS 개발을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 iOS 개발을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 프로그래밍 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 애플리케이션을 개발할 수 있는지에 대한 질문입니다. 강의 수료 후에는 iOS 애플리케이션의 기초를 이해하고, 간단한 애플리케이션을 직접 제작할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 애플리케이션 개발의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 iOS 프로그래밍의 기초부터 고급 기술까지 체계적으로 배우고, 실제 애플리케이션을 제작하며 실력을 쌓아 보세요!'
);

-- 네 번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '[정보보안] 사이버 시큐리티 - 웹해킹',
    150,
    '이 강의는 웹 해킹의 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 웹 보안 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 해킹 기술을 익히고 방어 방법을 배우는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>웹 보안</li>
        <li>SQL 인젝션</li>
        <li>XSS (Cross-Site Scripting)</li>
        <li>CSRF (Cross-Site Request Forgery)</li>
    </ul>',
    'Cyber Security 101: Web Hacking 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 웹 해킹의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 웹 보안의 기본 개념과 중요성에 대해 학습합니다. 이 부분에서는 웹 보안의 기본 원리와 주요 공격 벡터를 소개하고, 웹 애플리케이션의 취약점을 이해하는 방법을 설명합니다.<br>
 
 두 번째로, SQL 인젝션 공격과 방어 기법을 배웁니다. SQL 인젝션의 원리를 이해하고, 다양한 SQL 인젝션 공격 기법과 이를 방어하는 방법을 학습합니다.<br>
 
 세 번째로, XSS (Cross-Site Scripting) 공격과 방어 기법에 대해 학습합니다. XSS의 다양한 유형과 공격 기법을 이해하고, 이를 방어하는 방법을 배웁니다.<br>
 
 네 번째로, CSRF (Cross-Site Request Forgery) 공격과 방어 기법에 대해 다룹니다. CSRF의 원리와 공격 기법을 이해하고, 이를 방어하는 방법을 학습합니다.<br>
 
 다섯 번째로, 웹 해킹 도구와 실습 환경 설정에 대해 학습합니다. Burp Suite, OWASP ZAP 등의 웹 해킹 도구를 사용하여 실제 웹 애플리케이션의 취약점을 분석하고, 공격하는 방법을 배웁니다.<br>
 
 여섯 번째로, 최신 웹 보안 트렌드와 기술에 대해 학습합니다. 최신 웹 해킹 기법과 보안 패치 방법을 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>
 
 마지막으로, 웹 애플리케이션 보안 강화 방안을 학습합니다. 보안 강화를 위한 다양한 방법과 실무에서 적용할 수 있는 최적화 기법을 배우며, 실제 환경에 적용할 수 있는 능력을 기릅니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 웹 해킹을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 웹 해킹을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 보안 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 기술을 익힐 수 있는지에 대한 질문입니다. 강의 수료 후에는 웹 해킹의 기초를 이해하고, 간단한 웹 해킹 기법을 직접 수행할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 웹 보안의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 웹 해킹의 기초부터 고급 기술까지 체계적으로 배우고, 실제 해킹 기법과 방어 방법을 익히며 실력을 쌓아 보세요!'
);

-- 다섯 번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    'HTML/CSS/JavaScript 한 번에 끝내기',
    250,
    '이 강의는 HTML, CSS, JavaScript를 처음 배우는 사람들을 위한 포괄적인 프로그램입니다. 최신 웹 개발 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 웹 페이지를 제작하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>HTML</li>
        <li>CSS</li>
        <li>JavaScript</li>
        <li>웹 디자인</li>
    </ul>',
    'HTML / CSS / JavaScript 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 웹 개발의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, HTML의 기본 개념과 구조에 대해 학습합니다. 이 부분에서는 HTML의 기본 태그와 문서 구조를 이해하고, 간단한 웹 페이지를 만드는 방법을 설명합니다.<br>
 
 두 번째로, CSS를 사용한 스타일링 기법을 배웁니다. CSS의 기본 문법을 이해하고, 선택자, 속성, 값 등의 기초 개념을 다루며, 이를 실제 웹 페이지에 적용하는 방법을 학습합니다.<br>
 
 세 번째로, 레이아웃을 디자인하는 기법에 대해 학습합니다. Flexbox와 Grid 레이아웃 시스템을 사용하여 반응형 디자인을 구현하는 방법을 배웁니다.<br>
 
 네 번째로, JavaScript의 기초와 동작 원리에 대해 다룹니다. JavaScript의 기본 문법을 이해하고, 변수, 조건문, 반복문, 함수 등 기초 개념을 다루며, 이를 통해 웹 페이지에 동적 기능을 추가하는 방법을 배웁니다.<br>
 
 다섯 번째로, DOM(Document Object Model) 조작 기법에 대해 학습합니다. JavaScript를 사용하여 HTML 요소를 선택하고, 조작하는 방법을 익히며, 이벤트 핸들링 기법을 배웁니다.<br>
 
 여섯 번째로, 웹 페이지에 애니메이션을 추가하는 기법을 학습합니다. CSS와 JavaScript를 사용하여 다양한 애니메이션 효과를 구현하는 방법을 배우며, 사용자 경험을 향상시킵니다.<br>
 
 마지막으로, 웹 개발의 최신 트렌드와 기술에 대해 학습합니다. 최신 웹 디자인 트렌드와 개발 도구를 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 웹 개발을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 웹 개발을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 프로그래밍 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 웹 페이지를 개발할 수 있는지에 대한 질문입니다. 강의 수료 후에는 HTML, CSS, JavaScript의 기초를 이해하고, 간단한 웹 페이지를 직접 제작할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 웹 개발의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 HTML, CSS, JavaScript의 기초부터 고급 기술까지 체계적으로 배우고, 실제 웹 페이지를 제작하며 실력을 쌓아 보세요!'
);

-- 여섯번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '[System] 초심자를 위한 시스템 해킹',
    180,
    '이 강의는 시스템 해킹의 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 보안 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 해킹 기술을 익히고 방어 방법을 배우는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>시스템 보안</li>
        <li>취약점 분석</li>
        <li>익스플로잇 개발</li>
        <li>침투 테스트</li>
    </ul>',
    'System Hacking 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 시스템 해킹의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 시스템 보안의 기본 개념과 중요성에 대해 학습합니다. 이 부분에서는 시스템 보안의 기본 원리와 주요 공격 벡터를 소개하고, 시스템의 취약점을 이해하는 방법을 설명합니다.<br>
 
 두 번째로, 취약점 분석 기법을 배웁니다. 다양한 취약점 분석 도구를 사용하여 시스템의 취약점을 찾고, 이를 악용하는 방법을 학습합니다.<br>
 
 세 번째로, 익스플로잇 개발에 대해 학습합니다. 버퍼 오버플로우, 포맷 스트링 취약점 등 다양한 익스플로잇 기법을 이해하고, 이를 활용하여 실제 익스플로잇 코드를 작성하는 방법을 배웁니다.<br>
 
 네 번째로, 침투 테스트 기법에 대해 다룹니다. Metasploit, Nmap 등의 도구를 사용하여 시스템을 침투 테스트하고, 취약점을 분석하는 방법을 학습합니다.<br>
 
 다섯 번째로, 루트킷과 악성코드 분석에 대해 학습합니다. 루트킷의 동작 원리와 탐지 방법, 악성코드의 분석 기법을 익히며, 이를 방어하는 방법을 배웁니다.<br>
 
 여섯 번째로, 최신 시스템 보안 트렌드와 기술에 대해 학습합니다. 최신 시스템 해킹 기법과 보안 패치 방법을 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>
 
 마지막으로, 시스템 보안 강화 방안을 학습합니다. 보안 강화를 위한 다양한 방법과 실무에서 적용할 수 있는 최적화 기법을 배우며, 실제 환경에 적용할 수 있는 능력을 기릅니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 시스템 해킹을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 시스템 해킹을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 보안 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 기술을 익힐 수 있는지에 대한 질문입니다. 강의 수료 후에는 시스템 해킹의 기초를 이해하고, 간단한 해킹 기법을 직접 수행할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 시스템 보안의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 시스템 해킹의 기초부터 고급 기술까지 체계적으로 배우고, 실제 해킹 기법과 방어 방법을 익히며 실력을 쌓아 보세요!'
);

-- 일곱번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '[AI] 생성형 인공지능 & LLM 공격 및 분석',
    200,
    '이 강의는 대규모 언어 모델(LLM)을 이해하고 이를 조작하는 기술을 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 AI 기술 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 모델을 분석하고 조작하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>인공지능</li>
        <li>머신러닝</li>
        <li>대규모 언어 모델</li>
        <li>보안과 윤리</li>
    </ul>',
    'Artificial Intelligence: LLM Jailbreaking 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 LLM의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 대규모 언어 모델의 기본 개념과 중요성에 대해 학습합니다. 이 부분에서는 LLM의 기본 원리와 주요 응용 분야를 소개하고, 모델의 작동 방식을 이해하는 방법을 설명합니다.<br>
 
 두 번째로, LLM의 학습 과정과 구조를 배웁니다. 다양한 학습 알고리즘과 모델 구조를 이해하고, 이를 통해 LLM의 내부 작동 방식을 학습합니다.<br>
 
 세 번째로, LLM의 취약점과 공격 기법에 대해 학습합니다. 모델 조작, 데이터 중독, 악의적인 입력 등의 공격 기법을 이해하고, 이를 실습을 통해 익힙니다.<br>
 
 네 번째로, LLM을 안전하게 사용하는 방법에 대해 다룹니다. 모델의 안전성과 윤리적 사용에 대해 학습하고, 잠재적인 위험을 최소화하는 방법을 배웁니다.<br>
 
 다섯 번째로, 다양한 도구와 실습 환경 설정에 대해 학습합니다. TensorFlow, PyTorch 등의 도구를 사용하여 LLM을 실습하고, 모델의 취약점을 분석하는 방법을 배웁니다.<br>
 
 여섯 번째로, 최신 AI 보안 트렌드와 기술에 대해 학습합니다. 최신 AI 공격 및 방어 기법을 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>
 
 마지막으로, LLM의 보안 강화 방안을 학습합니다. 보안을 강화하기 위한 다양한 방법과 실무에서 적용할 수 있는 최적화 기법을 배우며, 실제 환경에 적용할 수 있는 능력을 기릅니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, LLM을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 LLM을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 AI 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 기술을 익힐 수 있는지에 대한 질문입니다. 강의 수료 후에는 LLM의 기초를 이해하고, 간단한 모델 조작 기법을 직접 수행할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 AI 보안의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 LLM의 기초부터 고급 기술까지 체계적으로 배우고, 실제 모델을 조작하며 실력을 쌓아 보세요!'
);

-- 여덟번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '코틀린을 통해 개발하는 안드로이드',
    220,
    '이 강의는 안드로이드 모바일 앱 개발의 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 Android 개발 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 안드로이드 앱을 제작하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>Kotlin</li>
        <li>Android Studio</li>
        <li>UI/UX 디자인</li>
        <li>API 통합</li>
    </ul>',
    'Mobile App Development: Android with Kotlin 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 안드로이드 앱 개발의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 안드로이드 개발 환경 설정과 기본 개념에 대해 학습합니다. 이 부분에서는 Android Studio 설치 및 설정, 안드로이드 프로젝트 생성 방법을 설명합니다.<br>
 
 두 번째로, Kotlin 프로그래밍 언어의 기초를 배웁니다. Kotlin 언어의 기본 문법을 이해하고, 변수, 조건문, 반복문, 함수 등 기초 개념을 다룹니다.<br>
 
 세 번째로, 안드로이드 UI 디자인과 레이아웃에 대해 학습합니다. 다양한 UI 요소를 추가하고, ConstraintLayout을 사용하여 반응형 디자인을 구현하는 방법을 배웁니다.<br>
 
 네 번째로, 데이터 저장과 관리에 대해 다룹니다. Room 라이브러리와 SharedPreferences를 사용하여 데이터를 저장하고 관리하는 방법을 학습합니다.<br>
 
 다섯 번째로, 네트워킹과 API 통합에 대해 학습합니다. Retrofit 라이브러리를 사용하여 RESTful API와 통신하고, JSON 데이터를 처리하는 방법을 익힙니다.<br>
 
 여섯 번째로, 앱의 성능 최적화와 디버깅 기법을 학습합니다. Android Profiler를 사용하여 성능을 분석하고, Android Studio의 디버깅 도구를 활용하여 버그를 찾고 수정하는 방법을 배웁니다.<br>
 
 마지막으로, Google Play 스토어에 앱을 배포하는 과정을 학습합니다. 앱 스토어에 앱을 제출하는 방법과 심사 절차, 배포 시 주의사항에 대해 배웁니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 안드로이드 개발을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 안드로이드 개발을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 프로그래밍 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 앱을 개발할 수 있는지에 대한 질문입니다. 강의 수료 후에는 안드로이드 앱의 기초를 이해하고, 간단한 앱을 직접 제작할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 앱 개발의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 안드로이드 앱 개발의 기초부터 고급 기술까지 체계적으로 배우고, 실제 앱을 제작하며 실력을 쌓아 보세요!'
);

-- 아홉번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    'S/W 엔지니어를 위한 로드맵',
    300,
    '이 강의는 소프트웨어 엔지니어가 되기 위한 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 소프트웨어 개발 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 소프트웨어 개발을 경험할 수 있습니다.',
    '<ul>
        <li>프로그래밍 언어</li>
        <li>데이터 구조와 알고리즘</li>
        <li>버전 관리</li>
        <li>소프트웨어 디자인 패턴</li>
    </ul>',
    'How to Be a Software Engineer 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 소프트웨어 개발의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 다양한 프로그래밍 언어에 대해 학습합니다. 이 부분에서는 Python, Java, C++ 등 주요 프로그래밍 언어의 기본 문법과 사용법을 배우고, 각 언어의 특성과 장단점을 이해합니다.<br>
 
 두 번째로, 데이터 구조와 알고리즘을 배웁니다. 배열, 리스트, 스택, 큐, 트리, 그래프 등 주요 데이터 구조를 학습하고, 이를 활용한 알고리즘 문제 해결 방법을 익힙니다.<br>
 
 세 번째로, 버전 관리 시스템에 대해 학습합니다. Git과 같은 버전 관리 도구의 기본 사용법을 배우고, 협업 시 발생할 수 있는 문제를 해결하는 방법을 학습합니다.<br>
 
 네 번째로, 소프트웨어 디자인 패턴에 대해 다룹니다. 객체 지향 설계 원칙과 디자인 패턴을 학습하여, 코드의 재사용성과 유지보수성을 높이는 방법을 배웁니다.<br>
 
 다섯 번째로, 소프트웨어 개발 과정에 대해 학습합니다. 요구사항 분석, 설계, 구현, 테스트, 배포 등 소프트웨어 개발의 전 과정을 이해하고, 실제 프로젝트에 적용하는 방법을 배웁니다.<br>
 
 여섯 번째로, 테스트와 디버깅 기법에 대해 학습합니다. 다양한 테스트 기법과 디버깅 도구를 사용하여 코드의 품질을 높이고, 버그를 효율적으로 해결하는 방법을 배웁니다.<br>
 
 마지막으로, 최신 소프트웨어 개발 트렌드와 기술에 대해 학습합니다. 최신 개발 도구와 프레임워크를 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 소프트웨어 개발을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 소프트웨어 개발을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 프로그래밍 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 소프트웨어를 개발할 수 있는지에 대한 질문입니다. 강의 수료 후에는 소프트웨어 개발의 기초를 이해하고, 간단한 애플리케이션을 직접 제작할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 소프트웨어 개발의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 소프트웨어 개발의 기초부터 고급 기술까지 체계적으로 배우고, 실제 소프트웨어를 제작하며 실력을 쌓아 보세요!'
);

-- 열 번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '클라우드 아키텍처의 A-Z',
    250,
    '이 강의는 클라우드 아키텍처의 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 클라우드 기술 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 클라우드 솔루션을 설계하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>클라우드 컴퓨팅</li>
        <li>AWS</li>
        <li>Azure</li>
        <li>Google Cloud Platform</li>
    </ul>',
    'Cloud Architecture 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 클라우드 아키텍처의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 클라우드 컴퓨팅의 기본 개념과 중요성에 대해 학습합니다. 이 부분에서는 클라우드 컴퓨팅의 기본 원리와 주요 서비스 모델을 소개하고, 클라우드의 장단점을 이해합니다.<br>
 
 두 번째로, AWS(Amazon Web Services)에 대해 학습합니다. 다양한 AWS 서비스와 그 활용 방법을 배우고, 실제 환경에서 AWS를 사용하는 방법을 익힙니다.<br>
 
 세 번째로, Azure에 대해 학습합니다. Microsoft Azure의 주요 서비스와 활용 사례를 이해하고, Azure를 활용한 클라우드 솔루션을 설계하는 방법을 배웁니다.<br>
 
 네 번째로, Google Cloud Platform(GCP)에 대해 다룹니다. GCP의 주요 서비스와 사용 방법을 배우고, 이를 활용하여 클라우드 애플리케이션을 개발하고 배포하는 방법을 학습합니다.<br>
 
 다섯 번째로, 클라우드 아키텍처 설계 원칙과 모범 사례에 대해 학습합니다. 확장성, 가용성, 비용 효율성 등을 고려한 클라우드 아키텍처 설계 방법을 배웁니다.<br>
 
 여섯 번째로, 클라우드 보안과 관리에 대해 학습합니다. 클라우드 환경에서의 보안 위협과 이를 방어하는 방법, 클라우드 자원을 효율적으로 관리하는 방법을 배웁니다.<br>
 
 마지막으로, 최신 클라우드 기술 트렌드와 사례에 대해 학습합니다. 최신 클라우드 기술과 도구를 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 클라우드 아키텍처를 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 클라우드 아키텍처를 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 클라우드 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 클라우드 솔루션을 설계할 수 있는지에 대한 질문입니다. 강의 수료 후에는 클라우드 아키텍처의 기초를 이해하고, 다양한 클라우드 솔루션을 직접 설계하고 배포할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 클라우드 아키텍처의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 클라우드 아키텍처의 기초부터 고급 기술까지 체계적으로 배우고, 실제 클라우드 솔루션을 설계하며 실력을 쌓아 보세요!'
);

-- 열 한 번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '데이터분석가를 위한 로드맵',
    200,
    '이 강의는 데이터 분석의 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 데이터 분석 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 데이터를 분석하는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>Python</li>
        <li>Pandas</li>
        <li>NumPy</li>
        <li>Matplotlib</li>
        <li>데이터 시각화</li>
    </ul>',
    'Data Analysis (Feat. Python) 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 데이터 분석의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 데이터 분석의 기본 개념과 중요성에 대해 학습합니다. 이 부분에서는 데이터 분석의 기본 원리와 주요 도구를 소개하고, 데이터 분석의 과정과 방법을 이해합니다.<br>
 
 두 번째로, Python 프로그래밍 언어의 기초를 배웁니다. Python 언어의 기본 문법을 이해하고, 데이터 분석에 필요한 라이브러리인 Pandas와 NumPy를 사용하는 방법을 학습합니다.<br>
 
 세 번째로, 데이터 전처리와 정제 기법에 대해 학습합니다. 결측치 처리, 데이터 변환, 데이터 병합 등의 전처리 기법을 익히고, 이를 통해 분석 가능한 데이터를 준비하는 방법을 배웁니다.<br>
 
 네 번째로, 데이터 시각화 기법에 대해 다룹니다. Matplotlib와 Seaborn을 사용하여 데이터를 시각적으로 표현하는 방법을 배우고, 다양한 차트를 생성하여 데이터의 패턴과 트렌드를 시각화합니다.<br>
 
 다섯 번째로, 데이터 분석 기법에 대해 학습합니다. 통계 분석, 회귀 분석, 분류 분석 등의 다양한 분석 기법을 이해하고, 이를 Python을 사용하여 실습하는 방법을 배웁니다.<br>
 
 여섯 번째로, 머신러닝 기초와 활용에 대해 학습합니다. Scikit-learn을 사용하여 머신러닝 모델을 구축하고, 데이터 분석에 적용하는 방법을 배우며, 모델의 성능을 평가하고 개선하는 방법을 학습합니다.<br>
 
 마지막으로, 최신 데이터 분석 트렌드와 사례에 대해 학습합니다. 최신 데이터 분석 기술과 도구를 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 데이터 분석을 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 데이터 분석을 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 프로그래밍 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 데이터 분석을 할 수 있는지에 대한 질문입니다. 강의 수료 후에는 데이터 분석의 기초를 이해하고, 다양한 데이터를 직접 분석할 수 있는 능력을 갖추게 됩니다. 이론과 실습을 통해 데이터 분석의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 데이터 분석의 기초부터 고급 기술까지 체계적으로 배우고, 실제 데이터를 분석하며 실력을 쌓아 보세요!'
);

-- 열 두번째 항목
INSERT INTO lecture_info (title, students, description, technologies, content, qna) VALUES (
    '현대 운영체제의 이해',
    220,
    '이 강의는 운영 체제의 기초부터 고급 기술까지 배우고자 하는 분들을 위한 포괄적인 프로그램입니다. 최신 운영 체제 기술 트렌드를 반영하여 체계적으로 학습하며, 실습 위주의 강의를 통해 실제 운영 체제를 이해하고 다루는 경험을 쌓을 수 있습니다.',
    '<ul>
        <li>운영 체제 기초</li>
        <li>프로세스 관리</li>
        <li>메모리 관리</li>
        <li>파일 시스템</li>
        <li>네트워킹</li>
    </ul>',
    '운영 체제: 개념과 실습 강의는 다양한 주제를 다루며, 학습자는 점차적으로 난이도가 상승하는 내용을 통해 운영 체제의 모든 측면을 익힐 수 있습니다.<br><br>
 
 첫 번째로, 운영 체제의 기본 개념과 중요성에 대해 학습합니다. 이 부분에서는 운영 체제의 기본 원리와 주요 기능을 소개하고, 운영 체제의 역할과 필요성을 이해합니다.<br>
 
 두 번째로, 프로세스 관리에 대해 학습합니다. 프로세스의 생성과 종료, 스케줄링, 동기화, 교착 상태 등의 개념을 배우고, 이를 운영 체제에서 어떻게 관리하는지 학습합니다.<br>
 
 세 번째로, 메모리 관리에 대해 학습합니다. 메모리 할당, 가상 메모리, 페이징, 세그멘테이션 등의 기법을 이해하고, 메모리 관리 기법을 실습합니다.<br>
 
 네 번째로, 파일 시스템에 대해 다룹니다. 파일 시스템의 구조와 원리, 파일의 생성과 삭제, 디렉토리 구조, 파일 접근 권한 등을 배우고, 실제 운영 체제에서 파일 시스템을 관리하는 방법을 학습합니다.<br>
 
 다섯 번째로, 네트워킹과 관련된 운영 체제 기능에 대해 학습합니다. 네트워크 프로토콜, 소켓 프로그래밍, 네트워크 인터페이스, 네트워크 보안 등을 이해하고, 이를 운영 체제에서 어떻게 다루는지 배웁니다.<br>
 
 여섯 번째로, 운영 체제의 보안과 관리에 대해 학습합니다. 운영 체제에서의 보안 위협과 이를 방어하는 방법, 시스템 자원을 효율적으로 관리하는 방법을 배웁니다.<br>
 
 마지막으로, 최신 운영 체제 기술 트렌드와 사례에 대해 학습합니다. 최신 운영 체제 기술과 도구를 이해하고, 앞으로의 기술 발전 방향을 예측합니다.<br>',
    '강의 중 자주 묻는 질문들에 대한 답변을 제공합니다.<br><br>
 
 첫 번째로, 운영 체제를 처음 접하는 사람도 수강할 수 있는지에 대한 질문입니다. 이 강의는 운영 체제를 처음 접하는 초보자도 쉽게 따라올 수 있도록 구성되어 있습니다. 기초부터 차근차근 설명하므로 운영 체제에 대한 경험이 없어도 수강할 수 있습니다.<br>
 
 두 번째로, 강의 자료는 어디서 다운로드 받을 수 있는지에 대한 질문입니다. 모든 강의 자료는 강의 포털 사이트에서 다운로드 받을 수 있습니다. 강의마다 제공되는 예제 파일과 자료를 통해 실습을 진행할 수 있습니다.<br>
 
 세 번째로, 수강 중 궁금한 점이 생기면 어떻게 해야 하는지에 대한 질문입니다. 강의 포털 사이트에 마련된 Q&A 게시판을 통해 질문을 남기시면 강사님과 다른 수강생들의 답변을 받을 수 있습니다. 또한, 주기적으로 진행되는 실시간 Q&A 세션을 통해 직접 질문할 수도 있습니다.<br>
 
 네 번째로, 강의 수료 후에는 어떤 운영 체제를 이해하고 다룰 수 있는지에 대한 질문입니다. 강의 수료 후에는 운영 체제의 기초를 이해하고, 다양한 운영 체제를 직접 다루는 능력을 갖추게 됩니다. 이론과 실습을 통해 운영 체제의 전반적인 과정을 경험하게 됩니다.<br>
 
 다섯 번째로, 추가 학습을 위한 추천 자료가 있는지에 대한 질문입니다. 강의 중간중간 추가 학습을 위한 추천 서적과 온라인 자료를 안내해 드립니다. 이를 통해 더 깊이 있는 공부를 할 수 있으며, 강의 후에도 계속해서 실력을 향상시킬 수 있습니다.<br>
 
 이 강의를 통해 운영 체제의 기초부터 고급 기술까지 체계적으로 배우고, 실제 운영 체제를 다루며 실력을 쌓아 보세요!'
);
